#include "/home/terra/TerraNG/terra/TerraNet.defs"

#define BROAD 1
#define DATA 2

var ushort nodeId = getNodeId();

pktype usrMsg from radioMsg with
        var ubyte[4]  d8;
        var ushort[4] d16;
        var ulong[2]  d32;
end

var usrMsg sndData;
var usrMsg recData;
var usrMsg tempData;
var usrMsg msgRadio;

var ubyte stat;

tempData.source = nodeId;
sndData.source = nodeId;
sndData.d32[0] = 0;

var ushort pai = 0;
var ubyte cont = 0;
var ubyte seq = 0;

if nodeId == 11 then
        await 1s;
        pai = 1;
        sndData.type = BROAD;
        sndData.target = BROADCAST;
        sndData.d8[0] = 0;
        stat = qPut(sndData);
else
        recData = await RECEIVE(BROAD);
        cont = recData.d8[0];
        recData.d8[0] = recData.d8[0] + 1;
        pai = recData.source;
        recData.source = nodeId;
        stat = qPut(recData);
end

par do
        await ((cont*500) + random()%200) ms;
        loop do
                await 10s;
                emit REQ_TEMP();
                tempData.d8[0] = seq;
                seq = seq + 1;
                tempData.d16[0] = await TEMP;
                tempData.type = DATA;
                tempData.target = pai;
                stat = qPut(tempData);
        end
with
        loop do
                recData = await RECEIVE(DATA);
                recData.target = pai;
                stat = qPut(recData);
        end
with
        loop do
                await Q_READY;
                loop do
                        if qSize() != 0 then
                                stat = qGet(msgRadio);
                                if(msgRadio.type == DATA) then
                                        emit SEND_ACK(msgRadio);
                                        await SEND_DONE_ACK;
                                        await 50ms;
                                else
                                        emit SEND(msgRadio);
                                        await SEND_DONE;
                                end
                        else
                                break;
                        end
                end
        end
end
